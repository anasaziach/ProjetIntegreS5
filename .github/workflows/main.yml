name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: inspiring-tower-411321 # TODO: update Google Cloud project id
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  SERVICE: myservice # TODO: update Cloud Run service name
  REGION: us-central1 # TODO: update Cloud Run service region
  FRONTEND_IMAGE_NAME : front
  PRODUCT_IMAGE_NAME : product
  AUTH_IMAGE_NAME : auth
  CONFIG_IMAGE_NAME : config
  POSTEGRES_PRODUCT_IMAGE_NAME : postgres_product
  POSTEGRES_AUTH_IMAGE_NAME : postgres_product
  

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
          token_format: 'access_token'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build Container
        run: docker-compose build

      - name: Push Container
        run: docker-compose push 


      # - name: Deploy frontend to Cloud Run
      #   id: deploy_frontend
      #   uses: google-github-actions/deploy-cloudrun@v0
      #   with:
      #     service: ${{ env.SERVICE }}-${{env.FRONTEND_IMAGE_NAME}}
      #     region: ${{ env.REGION }}
      #     image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.FRONTEND_IMAGE_NAME}}:latest
      
      # - name: Show Frontend Url
      #   run: echo frontend :${{ steps.deploy_frontend.outputs.url }} >> $GITHUB_STEP_SUMMARY



      - name: Deploy product to Cloud Run
        id: deploy_product
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}-${{env.PRODUCT_IMAGE_NAME}}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.PRODUCT_IMAGE_NAME}}:latest
          # metadata: service.yaml
      - name: Show Backend Url
        run: echo backend :${{ steps.deploy_product.outputs.url }}>> $GITHUB_STEP_SUMMARY


      - name: Deploy auth to Cloud Run
        id: deploy_auth
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}-${{env.AUTH_IMAGE_NAME}}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.AUTH_IMAGE_NAME}}:latest
          # metadata: service.yaml
      - name: Show Backend Url
        run: echo backend :${{ steps.deploy_auth.outputs.url }}>> $GITHUB_STEP_SUMMARY

      - name: Deploy config to Cloud Run
        id: deploy_config
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}-${{env.CONFIG_IMAGE_NAME}}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.CONFIG_IMAGE_NAME}}:latest
          # metadata: service.yaml
      - name: Show Backend Url
        run: echo backend :${{ steps.deploy_config.outputs.url }}>> $GITHUB_STEP_SUMMARY

      - name: Deploy postgres_product to Cloud Run
        id: deploy_postgres_product
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}-${{env.POSTEGRES_PRODUCT_IMAGE_NAME}}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.POSTEGRES_PRODUCT_IMAGE_NAME}}:latest
          # metadata: service.yaml
      - name: Show Backend Url
        run: echo backend :${{ steps.deploy_postgres_product.outputs.url }}>> $GITHUB_STEP_SUMMARY

      - name: Deploy postgres_auth to Cloud Run
        id: deploy_postgres_auth
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}-${{env.POSTEGRES_AUTH_IMAGE_NAME}}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.POSTEGRES_AUTH_IMAGE_NAME}}:latest
          # metadata: service.yaml
      - name: Show Backend Url
        run: echo backend :${{ steps.deploy_postgres_auth.outputs.url }}>> $GITHUB_STEP_SUMMARY

